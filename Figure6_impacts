import xarray as xr

dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/SAT_anomaly.nc')
temp=dset.__xarray_dataarray_variable__
months_of_interest = [11,12,1,2,3,4] 
temp_ndfma = temp.sel(time=temp['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
temp_mjjaso = temp.sel(time=temp['time.month'].isin(months_of_interest))


dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/geo850_anomaly.nc')
geo=dset.__xarray_dataarray_variable__/10
months_of_interest = [11,12,1,2,3,4] 
geo_ndfma = geo.sel(time=geo['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
geo_mjjaso = geo.sel(time=geo['time.month'].isin(months_of_interest))


dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/precip_anomaly.nc')
precip=dset.__xarray_dataarray_variable__
months_of_interest = [11,12,1,2,3,4] 
precip_ndfma = precip.sel(time=precip['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
precip_mjjaso = precip.sel(time=precip['time.month'].isin(months_of_interest))


dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/mslp_anomaly.nc')
mslp=dset.__xarray_dataarray_variable__
months_of_interest = [11,12,1,2,3,4] 
mslp_ndfma = mslp.sel(time=mslp['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
mslp_mjjaso = mslp.sel(time=mslp['time.month'].isin(months_of_interest))

dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/u850_anomaly.nc')
wind=dset.__xarray_dataarray_variable__
months_of_interest = [11,12,1,2,3,4] 
wind_ndfma = wind.sel(time=wind['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
wind_mjjaso = wind.sel(time=wind['time.month'].isin(months_of_interest))

dset=xr.open_dataset('/scratch/v45/SAMworkshop2024/data/v850_anomaly.nc')
vwind=dset.__xarray_dataarray_variable__
months_of_interest = [11,12,1,2,3,4] 
vwind_ndfma = vwind.sel(time=vwind['time.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
vwind_mjjaso = vwind.sel(time=vwind['time.month'].isin(months_of_interest))




dset=xr.open_dataset('/scratch/dx2/rr8442/SAM_GW_1m_1979-2023.nc')
sam=dset.SAM
months_of_interest = [11,12,1,2,3,4] 
sam_ndfma = sam.sel(time=sam['time.month'].isin(months_of_interest))

months_of_interest = [5,6,7,8,9,10] 
sam_mjjaso = sam.sel(time=sam['time.month'].isin(months_of_interest))

import numpy as np
import sacpy as scp
import matplotlib.pyplot as plt
import sacpy.Map # need cartopy or you can just not import
import cartopy.crs as ccrs

temp_jja = scp.LinReg(sam_mjjaso[0:],temp_mjjaso[0:])
temp_djf = scp.LinReg(sam_ndfma[0:],temp_ndfma[0:])

geo_jja = scp.LinReg(sam_mjjaso[0:],geo_mjjaso[0:])
geo_djf = scp.LinReg(sam_ndfma[0:],geo_ndfma[0:])

wind_jja = scp.LinReg(sam_mjjaso[0:],wind_mjjaso[0:])
wind_djf = scp.LinReg(sam_ndfma[0:],wind_ndfma[0:])

vwind_jja = scp.LinReg(sam_mjjaso[0:],vwind_mjjaso[0:])
vwind_djf = scp.LinReg(sam_ndfma[0:],vwind_ndfma[0:])


mslp_jja = scp.LinReg(sam_mjjaso[0:],mslp_mjjaso[0:])
mslp_djf = scp.LinReg(sam_ndfma[0:],mslp_ndfma[0:])

precip_jja = scp.LinReg(sam_mjjaso[0:],precip_mjjaso[0:])
precip_djf = scp.LinReg(sam_ndfma[0:],precip_ndfma[0:])

dset=xr.open_dataset('/scratch/w97/rr8442/seaice_conc.nc')
sea_ice_extent = dset.cdr_seaice_conc_monthly.sel(tdim=slice('1979-01-01','2023-12-01')).values 
data_proj = ccrs.epsg(dset.projection.attrs["srid"].split("::")[-1])
xgrid = dset.xgrid.values
ygrid = dset.ygrid.values

sea_ice_extent=xr.DataArray(sea_ice_extent)
sea_ice_extent['dim_0']=dset.sel(tdim=slice('1979-01-01','2023-12-01')).tdim.values
months_of_interest = [11,12,1,2,3,4] 
sic_ndfma = sea_ice_extent.sel(dim_0=sea_ice_extent['dim_0.month'].isin(months_of_interest))
months_of_interest = [5,6,7,8,9,10] 
sic_mjjaso = sea_ice_extent.sel(dim_0=sea_ice_extent['dim_0.month'].isin(months_of_interest))

sic_jja = scp.LinReg(sam_mjjaso[0:],sic_mjjaso[0:])
sic_djf = scp.LinReg(sam_ndfma[0:],sic_ndfma[0:])

import cartopy.crs as ccrs
import sacpy.Map
from matplotlib import rc
rc('text', usetex=True)
plt.rc('axes', linewidth=1.5)
plt.rc('font', weight='bold',size=15)
rc('font',**{'family':'serif','serif':['Times']})
kwtrans = dict(central_latitude=-90, central_longitude=180)


lon ,lat = geo.longitude , geo.latitude
fig = plt.figure(figsize=[10,10],dpi=100)
ax = fig.add_subplot(321,projection=ccrs.Robinson(180,))
m = ax.scontourf(lon,lat,temp_djf.slope.where(temp_djf.p_value<0.1),cmap=cmaps.BlueWhiteOrangeRed ,extend='both')
ax.init_map(stepx=50,smally=2.5)
ax.set_title('NDJFMA',)

ax1 = fig.add_subplot(322,projection=ccrs.Robinson(180,))
m = ax1.scontourf(lon,lat,temp_jja.slope.where(temp_jja.p_value<0.1),cmap=cmaps.BlueWhiteOrangeRed ,extend='both',)
ax1.init_map(stepx=50,smally=2.5)
ax1.set_title('MJJASO',)

ax2 = fig.add_subplot(323,projection=ccrs.Robinson(180,))
m1 = ax2.scontourf(lon,lat,precip_djf.slope.where(precip_djf.p_value<0.1),cmap=cmaps.precip_diff_12lev,extend='both')
ax2.squiver(lon,lat,wind_jja.slope[0],vwind_jja.slope[0],stepx=40,stepy=20,headwidth=2,headaxislength=6,width=.006,minlength=2)
ax2.coastlines()
ax2.init_map(smally=2.5)

ax3 = fig.add_subplot(324,projection=ccrs.Robinson(180,))
m1 = ax3.scontourf(lon,lat,precip_jja.slope.where(precip_jja.p_value<0.1),cmap=cmaps.precip_diff_12lev,extend='both')
ax3.squiver(lon,lat,wind_jja.slope[0],vwind_jja.slope[0],stepx=40,stepy=20,headwidth=2,headaxislength=6,width=.006,minlength=2)
ax3.coastlines()
ax3.init_map(smally=2.5)

from matplotlib.colors import BoundaryNorm
from matplotlib.ticker import MaxNLocator

levels=np.array([-0.04,  -0.03,  -0.02, -0.01, 
        0.   , 0.01,  0.02,  0.03, 0.04, ])
levels = levels
#MaxNLocator(nbins=15).tick_values(np.nanmin(sic_jja.slope[0]), np.nanmax(sic_jja.slope[0]))
cmap=cmaps.BlueWhiteOrangeRed
norm = BoundaryNorm(levels, ncolors=cmap.N, clip=True)


ax4 = fig.add_subplot(325,projection=ccrs.Orthographic(180, -90))
theta = np.linspace(0, 2*np.pi, 100)
center, radius = [0.5, 0.5], .5
verts = np.vstack([np.sin(theta), np.cos(theta)]).T
circle = mpath.Path(verts * radius + center)
ax4.set_boundary(circle, transform=ax4.transAxes)
ax4.add_feature(cfeature.LAND, edgecolor='black', facecolor='lightgray')
ax4.add_feature(cfeature.COASTLINE, edgecolor='black')
m2=ax4.pcolormesh(xgrid, ygrid, sic_djf.slope.where(sic_djf.p_value<0.1),transform=data_proj,norm=norm,cmap=cmaps.BlueWhiteOrangeRed,)
ax4.coastlines()
center_new, radius_new = [0.5, 0.5], 0.65  # New center and radius
circle_new = mpath.Path(verts * radius_new + center_new)
ax4.set_boundary(circle_new, transform=ax4.transAxes)
gl = ax4.gridlines(draw_labels=False, xlocs=None, ylocs=None)


ax5 = fig.add_subplot(326,projection=ccrs.Orthographic(180, -90))
theta = np.linspace(0, 2*np.pi, 100)
center, radius = [0.5, 0.5], .5
verts = np.vstack([np.sin(theta), np.cos(theta)]).T
circle = mpath.Path(verts * radius + center)
ax5.set_boundary(circle, transform=ax5.transAxes)
ax5.add_feature(cfeature.LAND, edgecolor='black', facecolor='lightgray')
ax5.add_feature(cfeature.COASTLINE, edgecolor='black')
m2=ax5.pcolormesh(xgrid, ygrid, sic_jja.slope.where(sic_jja.p_value<0.1),transform=data_proj,norm=norm,cmap=cmaps.BlueWhiteOrangeRed,)
ax5.coastlines()
center_new, radius_new = [0.5, 0.5], 0.65  # New center and radius
circle_new = mpath.Path(verts * radius_new + center_new)
ax5.set_boundary(circle_new, transform=ax5.transAxes)
gl = ax5.gridlines(draw_labels=False, xlocs=None, ylocs=None)



cc_ax = fig.add_axes([.945, 0.40, 0.01, 0.2])
cbar=fig.colorbar(m1,cax=cc_ax,orientation="vertical")
cbar.ax.get_yaxis().labelpad = 15
cbar.ax.set_ylabel('Precip (mm/day)', rotation=90)

cb_ax = fig.add_axes([.945, 0.68, 0.01, 0.2])
cbar1=fig.colorbar(m,cax=cb_ax,orientation="vertical",)
cbar1.ax.get_xaxis().labelpad = 15
cbar1.ax.set_ylabel('TA ($^\circ$C) ', rotation=90)

cb_ax = fig.add_axes([.945, 0.15, 0.01, 0.2])
cbar2=fig.colorbar(m2,cax=cb_ax,orientation="vertical",extend='both')
cbar2.ax.get_xaxis().labelpad = 15
cbar2.ax.set_ylabel('Sea Ice Anomaly () ', rotation=90)
